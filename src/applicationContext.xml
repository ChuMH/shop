<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<context:component-scan base-package="com.haina.service"></context:component-scan>
	
	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/webshop"/>
		<property name="username" value="root"/>
		<property name="password" value=""/>
	</bean>
	
	
	<!-- 创建sessionfactory -->
	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mappers.xml文件 -->
		<property name="mapperLocations" value="classpath:com/haina/mapper/*.xml"></property>
		<!-- mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- <property name="typeAliasesPackage" value="com.haina.domain"></property> -->
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<!-- 配置扫描Mapper包，来实现Mapper的依赖注入 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 这个类会扫描com.haina.dao包下的接口，然后根据sessionfactory的配置
	来生成接口的实现类，并且把生成的实现类，加入到spring的容器中 ，-->
		<property name="basePackage" value="com.haina.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	

</beans>